apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.34.0 (HEAD)
  labels:
    io.kompose.service: chirpstack
  name: chirpstack
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: chirpstack
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.34.0 (HEAD)
        vault.hashicorp.com/agent-inject: 'true'
        vault.hashicorp.com/role: 'webapp'
        vault.hashicorp.com/auth-path: 'auth/kubernetes-rriv'
        vault.hashicorp.com/agent-inject-secret-credentials.txt: 'secret/data/{{ .Values.environment }}-chirpstack-db-creds'
        vault.hashicorp.com/agent-inject-secret-postgresql-ca.crt: 'secret/data/{{ .Values.environment }}-chirpstack-db-creds'
        vault.hashicorp.com/agent-inject-template-credentials: |
          {{`{{- with secret "secret/data/`}}{{ .Values.environment }}{{`-chirpstack-db-creds" -}}`}}
          export POSTGRES_CONN_STRING={{`{{ .Data.data.pg_chirpstack_connection_string }}`}}
          {{`{{- end }}`}}
        vault.hashicorp.com/agent-inject-template-postgresql-ca.crt: |
          {{`{{- with secret "secret/data/`}}{{ .Values.environment }}{{`-chirpstack-db-creds" -}}`}}
          {{`{{ .Data.data.postgresql_ca_cert }}`}}
          {{`{{- end }}`}}
      labels:
        io.kompose.service: chirpstack
    spec:
      serviceAccountName: internal-app
      containers:
        - command: ["/bin/sh", "-c"]
          args: 
            - |
              timeout=20
              elapsed=0
              while [ ! -f /vault/secrets/credentials ]; do
                if [ $elapsed -ge $timeout ]; then
                  echo "Timeout waiting for Vault to inject secrets"
                  exit 1
                fi
                echo "Waiting for Vault to inject secrets..."
                sleep 2
                elapsed=$((elapsed + 2))
              done
              echo "Vault secrets injected"
              source /vault/secrets/credentials
              echo "starting chirpstack"
              exec /usr/bin/chirpstack --config /etc/chirpstack
          env:
            - name: MQTT_BROKER_HOST
              value: mosquitto
            - name: REDIS_HOST
              value: redis
          image: chirpstack/chirpstack:4
          name: chirpstack
          securityContext:
            runAsUser: 1000
          ports:
            - containerPort: 8080
              protocol: TCP
          volumeMounts:
            - mountPath: /etc/chirpstack
              name: chirpstack-cm0
            - mountPath: /opt/lorawan-devices
              name: chirpstack-claim1
      restartPolicy: Always
      volumes:
        - configMap:
            name: chirpstack-cm0
          name: chirpstack-cm0
        - name: chirpstack-claim1
          persistentVolumeClaim:
            claimName: chirpstack-claim1
