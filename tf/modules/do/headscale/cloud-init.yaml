#cloud-config
package_update: true
package_upgrade: true

packages:
  - docker.io
  - docker-compose
  - nginx
  - certbot
  - python3-certbot-nginx

write_files:
  - path: /opt/headscale/docker-compose.yml
    content: |
      version: '3.8'
      services:
        headscale:
          image: headscale/headscale:latest
          container_name: headscale
          restart: unless-stopped
          ports:
            - "8080:8080"
          volumes:
            - ./config:/etc/headscale
            - ./data:/var/lib/headscale
          command: serve

  - path: /opt/headscale/config/config.yaml
    content: |
      server_url: https://${domain}
      listen_addr: 0.0.0.0:8080
      
      oidc:
        issuer: "${oidc_issuer}"
        client_id: "${oidc_client_id}"
        client_secret: "${oidc_client_secret}"
        scope: ["openid", "profile", "email"]
      
      noise:
        private_key_path: /var/lib/headscale/noise_private.key
      
      prefixes:
        v4: 100.64.0.0/10
        v6: fd7a:115c:a1e0::/48
      
      derp:
        server:
          enabled: false
        urls:
          - https://controlplane.tailscale.com/derpmap/default
        auto_update_enabled: true
        update_frequency: 24h
      
      dns:
        override_local_dns: true
        magic_dns: true
        base_domain: ${base_domain}
        nameservers:
          global:
            - 1.1.1.1
            - 8.8.8.8
      
      database:
        type: sqlite
        sqlite:
          path: /var/lib/headscale/db.sqlite
      
      # Enable Tailscale SSH (users can SSH via their Tailscale identity)
      ssh:
        policy:
          - action: accept
            src: ["group:admins"]
            dst: ["tag:infrastructure"]
            users: ["root", "ubuntu"]
      
      log:
        level: info

  - path: /etc/nginx/sites-available/headscale
    content: |
      server {
          listen 80;
          server_name ${domain};
          
          location / {
              proxy_pass http://localhost:8080;
              proxy_set_header Host $host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Proto $scheme;
              
              # WebSocket support for Tailscale
              proxy_http_version 1.1;
              proxy_set_header Upgrade $http_upgrade;
              proxy_set_header Connection "upgrade";
              proxy_read_timeout 86400;
              proxy_send_timeout 86400;
          }
      }

runcmd:
  - mkdir -p /opt/headscale/{config,data}
  - cd /opt/headscale && docker-compose up -d
  - ln -s /etc/nginx/sites-available/headscale /etc/nginx/sites-enabled/
  - systemctl reload nginx
  - certbot --nginx --non-interactive --agree-tos --email admin@rriv.org -d ${domain}
  - systemctl enable docker
  - systemctl enable nginx
  # Configure exit node functionality
  - echo 'net.ipv4.ip_forward=1' >> /etc/sysctl.conf
  - echo 'net.ipv6.conf.all.forwarding=1' >> /etc/sysctl.conf
  - sysctl -p
  # Configure iptables for NAT (exit node functionality)
  - iptables -t nat -A POSTROUTING -s 100.64.0.0/10 -o eth0 -j MASQUERADE
  - iptables -A FORWARD -i tailscale0 -j ACCEPT
  - iptables -A FORWARD -o tailscale0 -j ACCEPT
  # Save iptables rules
  - apt-get install -y iptables-persistent
  - iptables-save > /etc/iptables/rules.v4
  # Install Tailscale on the server to act as exit node
  - curl -fsSL https://tailscale.com/install.sh | sh
  - sleep 30  # Wait for Headscale to be ready
  # Connect server to its own Headscale network as exit node
  - tailscale up --login-server https://${domain} --advertise-exit-node --hostname headscale-server
  # Fix SSL config to include WebSocket support after certbot
  - |
    cat > /etc/nginx/sites-available/headscale << 'EOF'
    server {
        listen 80;
        server_name ${domain};
        return 301 https://$server_name$request_uri;
    }
    
    server {
        listen 443 ssl http2;
        server_name ${domain};
        
        ssl_certificate /etc/letsencrypt/live/${domain}/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/${domain}/privkey.pem;
        include /etc/letsencrypt/options-ssl-nginx.conf;
        ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;
        
        location / {
            proxy_pass http://localhost:8080;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support for Tailscale
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_read_timeout 86400;
            proxy_send_timeout 86400;
        }
    }
    EOF
  - nginx -t && systemctl reload nginx
